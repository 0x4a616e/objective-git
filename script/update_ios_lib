#!/bin/sh

function xcode_major_version {
  local XCODE_VERSION=`/usr/bin/xcodebuild -version | head -n 1 | sed -E 's/Xcode ([0-9\.]*)/\1/'`

  local XCODE_MAJOR_VERSION=`echo $XCODE_VERSION | awk -F '.' '{ print $1 }'`

  echo $XCODE_MAJOR_VERSION
}

function prepare_build_variables {
  local DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
  CURRENT_PATH=`dirname ${DIR}`
  CLANG=`/usr/bin/xcrun --find clang`
  CC=${CLANG}
  CPP="${CLANG} -E"
  ARCHS=("i386" "armv7" "armv7s")
  DEVELOPER="/Applications/Xcode.app/Contents/Developer"
  MACOSX_DEPLOYMENT_TARGET=""
  
  XCODE_MAJOR_VERSION=$(xcode_major_version)

  if [ "${XCODE_MAJOR_VERSION}" -ge "5" ]; then
    SDKVERSION="7.0"
    if [ -z "${IPHONEOS_DEPLOYMENT_TARGET}" ]; then
      IPHONEOS_DEPLOYMENT_TARGET=${SDKVERSION}
    fi
    if [ `echo ${IPHONEOS_DEPLOYMENT_TARGET} '>=' 6.0 | bc -l` == "1" ]; then
      ARCHS=("x86_64" "${ARCHS[@]}" "arm64")
    fi
  else
    SDKVERSION="6.1"
    IPHONEOS_DEPLOYMENT_TARGET="5.0"
  fi
}

function build_all_archs {
  echo "Building for ${ARCHS[@]}"
  
  for ARCH in ${ARCHS[@]}; do
    if [ "${ARCH}" == "i386" ] || [ "${ARCH}" == "x86_64" ]; then
        PLATFORM="iPhoneSimulator"
    else
        PLATFORM="iPhoneOS"
    fi

    if [ "${ARCH}" == "arm64" ]; then
        HOST="aarch64-apple-darwin"
    else
        HOST="${ARCH}-apple-darwin"
    fi

    echo "Building ${LIBRARY_NAME} for ${PLATFORM} ${SDKVERSION} ${ARCH}"
    echo "Please stand by..."	
    DEVROOT="${DEVELOPER}/Platforms/${PLATFORM}.platform/Developer"
    SDKROOT="${DEVROOT}/SDKs/${PLATFORM}${SDKVERSION}.sdk"

    eval $1

  done
}

