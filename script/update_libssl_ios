#!/bin/sh

set -e

# augment path to help it find cmake installed in /usr/local/bin,
# e.g. via brew. Xcode's Run Script phase doesn't seem to honor
# ~/.MacOSX/environment.plist
PATH="/usr/local/bin:/opt/boxen/homebrew/bin:$PATH"

# source the common build functions
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "${DIR}/update_ios_lib"

prepare_build_variables

if [ -f "${CURRENT_PATH}/External/ios-openssl/lib/libssl.a" ] && [ -f "${CURRENT_PATH}/External/ios-openssl/lib/libcrypto.a" ] && [ -d "${CURRENT_PATH}/External/ios-openssl/include" ]; then
    echo "No update needed."
    exit 0
fi

LIBRARY_NAME="OpenSSL"

BUILT_CRYPTO_PATHS=()
BUILT_SSL_PATHS=()

rm -rf ${CURRENT_PATH}/External/ios-openssl/include External/ios-openssl/lib

function cleanup {
  rm -rf "/tmp/openssl"
  rm -rf "/tmp/openssl-*.log"
}

function build_ssl {
  rm -rf /tmp/openssl
  cp -r ${CURRENT_PATH}/External/openssl /tmp/
  pushd .
  cd /tmp/openssl

  LOG="/tmp/openssl-${ARCH}.log"

  echo $LOG

  ./Configure BSD-generic32 no-gost --openssldir="/tmp/openssl-${ARCH}" &> ${LOG}
  perl -i -pe 's|static volatile sig_atomic_t intr_signal|static volatile int intr_signal|' crypto/ui/ui_openssl.c
  perl -i -pe "s|^CC= gcc|CC= ${CLANG} -miphoneos-version-min=${IPHONEOS_DEPLOYMENT_TARGET} -arch ${ARCH} |g" Makefile
  perl -i -pe "s|^CFLAG= (.*)|CFLAG= -isysroot ${SDKROOT} \$1|g" Makefile

  make &> ${LOG}

  make install &> ${LOG}
  popd
  rm -rf "/tmp/openssl"

  BUILT_CRYPTO_PATHS+=("/tmp/openssl-${ARCH}/lib/libcrypto.a")
  BUILT_SSL_PATHS+=("/tmp/openssl-${ARCH}/lib/libssl.a")
}

cleanup
build_all_archs build_ssl

echo "Building fat library..."

mkdir -p ${CURRENT_PATH}/External/ios-openssl/include
cp -r /tmp/openssl-i386/include/openssl ${CURRENT_PATH}/External/ios-openssl/include/

mkdir -p ${CURRENT_PATH}/External/ios-openssl/lib

lipo -create ${BUILT_CRYPTO_PATHS[@]} -output ${CURRENT_PATH}/External/ios-openssl/lib/libcrypto.a
lipo -create ${BUILT_SSL_PATHS[@]} -output ${CURRENT_PATH}/External/ios-openssl/lib/libssl.a

cleanup

echo "Building done."
