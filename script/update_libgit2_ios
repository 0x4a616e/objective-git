#!/bin/sh

set -e

# augment path to help it find cmake installed in /usr/local/bin,
# e.g. via brew. Xcode's Run Script phase doesn't seem to honor
# ~/.MacOSX/environment.plist
PATH="/usr/local/bin:/opt/boxen/homebrew/bin:$PATH"

# source the common build functions
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "${DIR}/update_ios_lib"

prepare_build_variables

if [ "${ROOT_PATH}/External/libgit2-ios.a" -nt "${ROOT_PATH}/External/libgit2" ]; then
    echo "No update needed."
    exit 0
fi

LIBRARY_NAME="libgit2"

LIB_PATH="${ROOT_PATH}/External/libgit2-ios"

BUILT_LIB_PATHS=()

pushd .

if [ -d "${LIB_PATH}" ]; then
    rm -rf "${LIB_PATH}"
fi


cd ${ROOT_PATH}/External/libgit2

function build_libgit2 {
  if [ -d "build" ]; then
      rm -rf "build"
  fi

  pushd .

  mkdir build
  cd build

  # LOL Cmake
  if [ "${ARCH}" != "i386" ] && [ "${ARCH}" != "x86_64" ]; then
    SYS_ROOT="-DCMAKE_OSX_SYSROOT=${SDKROOT}"
  fi

  INSTALL_PREFIX="${LIB_PATH}/${PLATFORM}${SDKVERSION}-${ARCH}.sdk"

  mkdir -p ${INSTALL_PREFIX}

  LOG="${INSTALL_PREFIX}/build-libgit2.log"
  echo $LOG

  cmake -DCMAKE_C_COMPILER=${CLANG} \
        -DCMAKE_C_COMPILER_WORKS:BOOL=ON \
        -DBUILD_SHARED_LIBS:BOOL=OFF \
        -DOPENSSL_INCLUDE_DIR:PATH=../../External/ios-openssl/include/ \
        -DCMAKE_LIBRARY_PATH:PATH=../../External/libssh2-ios/lib/ \
        -DCMAKE_INCLUDE_PATH:PATH=../../External/libssh2-ios/include/libssh2/ \
        -DOPENSSL_SSL_LIBRARY:FILEPATH=../../External/ios-openssl/lib/libssl.a \
        -DCMAKE_LIBRARY_PATH:PATH=${SDKROOT}/usr/lib/ \
        -DOPENSSL_CRYPTO_LIBRARY:FILEPATH=../../External/ios-openssl/lib/libcrypto.a \
        -DCMAKE_INSTALL_PREFIX:PATH=${INSTALL_PREFIX}/ \
        -DBUILD_CLAR:BOOL=OFF \
        ${SYS_ROOT} \
        -DCMAKE_OSX_ARCHITECTURES:STRING=${ARCH} \
        .. >> "${LOG}" 2>&1
  cmake --build . --target install >> "${LOG}" 2>&1

  # push the built library into the list
  BUILT_LIB_PATHS+=("${INSTALL_PREFIX}/lib/libgit2.a")
  popd
}

build_all_archs build_libgit2

popd

echo "Building fat library..."

lipo -create ${BUILT_LIB_PATHS[@]} -output ${ROOT_PATH}/External/libgit2-ios.a

echo "Building done."
