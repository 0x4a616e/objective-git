#!/bin/sh

set -e

if [ "External/libgit2-ios.a" -nt "External/libgit2" ]; then
    echo "No update needed."
    exit 0
fi

# augment path to help it find cmake installed in /usr/local/bin,
# e.g. via brew. Xcode's Run Script phase doesn't seem to honor
# ~/.MacOSX/environment.plist
PATH="/usr/local/bin:$PATH"

SDKVERSION="7.0"
CURRENTPATH=`pwd`
ARCHS=("i386" "armv7" "armv7s" "arm64")
DEVELOPER="/Applications/Xcode.app/Contents/Developer"
CLANG=`/usr/bin/xcrun --find clang`

LIB_PATH="${CURRENTPATH}/External/libgit2/lib"

BUILT_LIB_PATHS=()

cd External/libgit2

if [ -d "lib" ]; then
    rm -rf "lib"
fi

for ARCH in ${ARCHS[@]}; do
  if [ -d "build" ]; then
      rm -rf "build"
  fi

  mkdir build
  cd build

  if [ "${ARCH}" == "i386" ]; then
      PLATFORM="iPhoneSimulator"
  else
      PLATFORM="iPhoneOS"
  fi

  echo "Building libgit2 for ${PLATFORM} ${SDKVERSION} ${ARCH}"
  echo "Please stand by..."

  DEVROOT="${DEVELOPER}/Platforms/${PLATFORM}.platform/Developer"
  SDKROOT="${DEVROOT}/SDKs/${PLATFORM}${SDKVERSION}.sdk"

  INSTALL_PREFIX="${LIB_PATH}/${PLATFORM}${SDKVERSION}-${ARCH}.sdk"

  mkdir -p ${INSTALL_PREFIX}

  cmake -DCMAKE_C_COMPILER=${CLANG} \
        -DCMAKE_C_COMPILER_WORKS:BOOL=ON \
        -DBUILD_SHARED_LIBS:BOOL=OFF \
        -DOPENSSL_INCLUDE_DIR:PATH=../../External/ios-openssl/include/ \
        -DCMAKE_LIBRARY_PATH:PATH=../../External/libssh2-ios/lib/ \
        -DCMAKE_INCLUDE_PATH:PATH=../../External/libssh2-ios/include/libssh2/ \
        -DOPENSSL_SSL_LIBRARY:FILEPATH=../../External/ios-openssl/lib/libssl.a \
        -DOPENSSL_CRYPTO_LIBRARY:FILEPATH=../../External/ios-openssl/lib/libcrypto.a \
        -DCMAKE_OSX_SYSROOT=${SDKROOT} \
        -DCMAKE_OSX_ARCHITECTURES:STRING=${ARCH} \
        -DCMAKE_INSTALL_PREFIX:PATH=${INSTALL_PREFIX} \
        -DBUILD_CLAR:BOOL=OFF \
        ..
  cmake --build .
  make install > 2&>1

  # push the built library into the list
  BUILT_LIB_PATHS+=("${INSTALL_PREFIX}/lib/libgit2.a")
  cd ..
done

cd ${CURRENTPATH}

echo "Build library..."

echo ${BUILT_LIB_PATHS[@]}

lipo -create ${BUILT_LIB_PATHS[@]} -output ${CURRENTPATH}/External/libgit2/lib/libgit2-ios.a

echo "Building done."
